---
title: "Survival Skills: Concepts of Data-Driven Visualization"
author: "Curry, Tweedy, Schilling"
format: 
  revealjs:
    logo: logo.png
    # footer: "STEM Services"
    slide-number: true
    #show-notes: separate-page #https://revealjs.com/pdf-export/
    preview-links: true
    slide-tone: true
    controls: true
    smaller: true
    center-title-slide: false
    hash: true
editor: source
---


# Getting started (5 min)

## What we will discuss today

- Define visualizations for data

- What, why, and how of data-driven visualizations

  - What: goals

  - Why: human perception

  - How: design and defaults

- How to get more help

## Ice breakers

-   5 min ice breaker activity: A boring fact about yourself
-   Pronouns if comfortable

::: notes
5 min, use this time to let late arrivals settle in.

  - In person
    - Confirm everyone has at least one person to discuss with (in person) 
    - Provide paper copies of handouts (in person)
    - Ice Breaker at table

  - Online
    - Provide link to handouts (online)
    - Ask each person to introduce themselves in chat (online) with your preferred professional icebreaker
    
:::

## What is data-driven visualization?

-   Definition: "visual representation and presentation of data to facilitate understanding"
-   We use visualizations (graphs, figures, plots) for
    -   exploring 
    -   telling a story 

::: aside
Kirk, 2019, *Data visualization, a handbook for data driven design, 2nd ed*. Los Angeles: SAGE.
:::

::: notes
Exploring is often earlier in analysis or for descriptive studies.
Telling a story is often to supplement or explain a statistical analysis or describe your data.
:::

## Consider this visualization (5 min)

::::: columns

::: {.column .fragment width="50%"}
```{r}
library(palmerpenguins)
original_penguins <- plot(x = palmerpenguins::penguins$species, y = penguins$flipper_length_mm)
```
:::


::: {#vcenter .column .fragment width="50%"}

-   What variables are included?

-   What is a question this graph could answer?

-   What is confusing?

:::

:::::




## Again, here's what we'll cover about visualizations

- What, why, and how of data-driven visualizations

  - What: goals

  - Why: human perception

  - How: design and defaults

- Lots of new and classic visualization resources!



# Goals: **What** you need the graph to be

## Trustworthy, reasonable, faithful, integrity^[Kirk, 2019]

-   Ensure all variables from question are included, aka data density^[Tufte 2001, *The Visual Display of Quantitative Information, 2nd Ed.*, Graphics Press.]
    -   Whether in axes, multiples/facets^[Tufte, 1997, *Visual Explanations*, Graphics Press], or groupings (shapes, colors, line types)
-   Are the relevant summaries and uncertainty shown?^[Wickham, Navarro, Pederson. 2024. Ggplot2: Elegant Graphics for Data Analysis (3e). https://ggplot2-book.org/]

## Where appropriate, follow examples

- What's the common way to present this in your discipline?
  - Searching in captions in some databases.
- Check your journal style guide if submitting manuscript


## Possible + useful = relevant^[Kirk, 2019, pg. 130, figure 5.6]

- There is no right answer, there is the right answer for your situation
- Graph data more than once to show different aspects



# Perception: **Why** graphs work

## Presentation, accessible, usable, understandable.

     
- Visual patterns as an augment to working memory limitations of humans^[Few, 2021, *Now You See It: an introduction to visual data sensemaking*.  El Dorado Hills: Analytics Press. page 52]

- Universal design
  - Size of visualization elements (text, symbols, lines)
  - Limits of human perception
  


## Limitations of "typical" human perception

- "Ordered Elementary Tasks"^[Robbins, 2005, *Creating More Effective Graphs*. Hoboken, NJ: Wiley-Interscience.]


### Top three "perceptually accurate representations"

- Position along a common scale (common baseline)
- Position along identical, non-aligned scales (small multiples^[Tufte, 1990, *Envisioning Information*, Graphics Press.])
- Length

## More difficult to judge^[Robbins 2005, pg 61]

- Angle/slope
  - We can do slopes, but not angles (this is part of why pie charts difficult)
- Area
- Volume
- Color hue - color saturation - density
    

### When in doubt

Choose the principle least likely to mislead^[Robbins 2005, pg 224]




# Design: **How** to communicate your message

## Program defaults usually not great

- Consider location of audience (paper, screen, projection)
- Not all minds or eyes work the same - universal design
- Make changes to tell your story more clearly^[Kirk 2017, pg 33]
  - Learn how to save settings for graphs in code

## What actions to take?
- Three ways to design systematically^[Few, 2012. *Show me the numbers: designing tables and graphs to enlighten, 2nd ed*. Burlingame, CA: Analytics Press.]

  - Highlight
  - Organize
  - "Integrate text" (context)


## Highlight
- Make data visually prominent^[Robbins 2005, pg 163]
- Use smallest^[Tufte 1997] effective change for differences
  - What does this mean?  Resolution, subtlety, don't jar viewer
- Do any calculations for the viewer^[Robbins 2005, pg 216]
  - This means plot the variable of interest
  - Differences, not before and after

```{r}
library(dplyr)
library(ggplot2)
library(tidyr)
names(palmerpenguins::penguins)

summary_by_year <- palmerpenguins::penguins %>%
  group_by(species, year) %>%
  dplyr::filter(species != "Gentoo", year != 2007) %>%
  summarize(mean_flips = mean(flipper_length_mm)) %>%
  arrange(mean_flips)

ggplot(data = summary_by_year, 
       mapping = aes(x = species, y = mean_flips, color = as.factor(year))) +
  geom_point()+ 
  labs(x = "Penguin species", y = "Flipper length (mm)")



summary_penguin_diffs <- summary_by_year %>%
  ungroup()%>%
  pivot_wider(names_from = year, values_from = mean_flips)%>%
  mutate(diff_flips = `2008`-`2009`)

ggplot(data = summary_penguin_diffs, 
       mapping = aes(x = species, y = diff_flips)) +
  geom_point(size = 10) + 
  ylim(min = -1.5, 0)+
  labs(x = "Penguin species", 
       y = "Difference in flipper length (mm) from 2008 to 2009")

```



## Organize

"Visual complexity is distracting and should therefore never be employed to a degree that exceeds the actual complexity in the data"^[Few 2021, pg 49]

- Use common baselines wherever possible to make group comparisons^[Robbins 2005, p 207]
- Use small multiples to show otherwise overlapping groups^[Robbins 2005, p 168-171]
- Reduce interior clutter^[Robbins 2005, pp 175-183] in grids, ticks, labels

::: {.absolute top="50%" left="4%" width="350"}
```{r}
subset_penguins <- palmerpenguins::penguins %>%
  dplyr::filter(species != "Gentoo", year != 2007)

ggplot(data = subset_penguins, 
       mapping = aes(x = body_mass_g, y = flipper_length_mm,
                     color = species, shape = island)) +
  geom_point(size = 10) + 
  labs(x = "Penguin species", 
       y = "Flipper length (mm)")

```
:::

::: {.absolute top="55%" left="54%" width="400"}
```{r, echo=FALSE,warning=FALSE,message=FALSE,error=FALSE, results='hide',fig.keep='all'}
# learning how to position: https://meghan.rbind.io/blog/2022-07-12-making-slides-in-quarto-with-revealjs/#absolute-position

ggplot(data = subset_penguins, 
       mapping = aes(x = body_mass_g,
                     y = flipper_length_mm, 
                     color = species, 
                     shape = species)) +
  geom_point(size = 5) + 
  facet_wrap(island ~ .)
  labs(x = "Penguin species", 
       y = "Flipper length (mm)")

```
:::


## Integrate with context

- Label variables consistent with text^[Robbins 2005, p 193]
- Label directly on visuals where possible^[Robbins 2005, p 213]
- Use consistent symbology in related visualizations^[Robbins 2005, p 221]


# Ending activity (10 min)

## What recommendations do you have for the original graph?

```{r}
library(palmerpenguins)
(original_penguins <- plot(x = palmerpenguins::penguins$species, y = penguins$flipper_length_mm))
```

## Some possibilities

:::: {.columns} ::: {.column #vcenter width="50%" .fragment}

```{r}
library(palmerpenguins)
(original_penguins <- plot(x = palmerpenguins::penguins$species, y = penguins$flipper_length_mm))
```

:::

::: {.column .fragment width="50%"}
```{r}
library(palmerpenguins)
library(ggplot2)
ggplot(data = palmerpenguins::penguins, mapping = aes(x = species, y = flipper_length_mm)) +
  geom_boxplot(notch = TRUE) +
  geom_point(stat = "summary", 
             fun = mean, 
             shape = "x", 
             size = 10)+ 
  facet_wrap(island~.) + 
  labs(x = "Penguin species", y = "Flipper length (mm)")
```
:::

## Get more help

-   Resource handout w/checklist
-   DSDS office hours/contact form

## Please provide feedback

Survey link

![QR Code](qrcode_ou-libwizard-com.png)
